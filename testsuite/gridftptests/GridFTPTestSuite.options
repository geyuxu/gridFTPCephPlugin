#
# Put a nice header here
#
# this is the configuration file for the GridFTP plugin test suite,
# This is a template for an option file that can be used to
# configure the test suite. Please read it carefully and
# fill in the proper values.
#
# All lines are commented by default, with the dafault value
# indicated. To change the default, just edit and uncomment
#
# Note that the syntax of this file is the one of the python
# ConfigParser class. It implements a basic configuration
# file parser language which provides a structure similar
# to what you would find on Microsoft Windows INI files.
#

# generic info about the context in which the test suite will run
[Generic]

# Name of the gridFTP server to contact
gridFTPServer = vm119.nubes.stfc.ac.uk

# Name of the ceph pool to be used
cephPool = rep-1

# Name of the ceph user id to be used
cephUserId = diamond

# Put this to true if you want the test suite to skip tests when resources are missing
# Default behavior is to fail
# SkipTestsWhenResourceMissing = false

# Put this to true if you do not want to cleanup temporary files created
# by the test suite in the CASTOR namespace
# NoCleanup = false

# Environment to be used for the tests
# Each line will be translated into an environment variable setting
[Environment]

# GLOBUS Base directory
GLOBUSSYS = /usr

# values to give to parameters in the .input files of the test suite
# any <TAG> string (where tag can contain anything but '>') will be
# replaced by the value of the corresponding entry
[Tags]

# Local file name to be used as sample data
localFileName = /etc/group

# Local large file name - a large file for testing whether truncation is done correctly
localLargeFileName = /etc/services

# Local small file name - a small file for testing that the large file above is truncated by the GridFTP plugin
localSmallFileName = /etc/group

# Control of which test to run when no flags is given for a given set
# If any flag is given on the command line, this part is ignored for the corresponding set
# Entries should be in the form
#  <testName> = <boolean value> 
# Test names are of the form SetName[_SubDir]*_LocalTestName.
# They can be truncated to match all tests starting with the given string
# recognized boolean values are 1, yes, true, on, 0, no, false, off
# and all alternates cases for these values
# If several options apply to a given file, the most precise one wins
# Here is an example of how to run all rfio tests, but for the remote ones :
# rfio_remote = false
# rfio = true
[TestsToRun]

